name: CI Pipeline

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main"]

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.1
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Debug MySQL secret
        run: |
          if [ -z "${MYSQL_ROOT_PASSWORD}" ]; then
            echo "❌ MYSQL_ROOT_PASSWORD is empty or unavailable!"
          else
            echo "✅ MYSQL_ROOT_PASSWORD is set (value hidden for security)."
          fi
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}

      - name: Run tests
        env:
          run: |
            echo "--- Vérification des Secrets ---"
            # Vérifie si la variable est définie (non vide)
            echo "MYSQL_USER est défini : ${MYSQL_USER:+OUI}"
            echo "MYSQL_PASSWORD est défini : ${MYSQL_PASSWORD:+OUI}"
            echo "JWT_SECRET_TEST est défini : ${JWT_SECRET:+OUI}"
            
            # Affiche les 3 premiers caractères (suffisant pour vérifier si la valeur est là)
            echo "MYSQL_PASSWORD_TEST (début) : ${MYSQL_PASSWORD:0:3}***"
            
            # Vérifie la longueur de la variable (si elle est lue, elle aura une longueur > 0)
            echo "Longueur de MYSQL_PASSWORD_TEST : ${MYSQL_PASSWORD}"
            
            echo "--------------------------------"
          NODE_ENV: test
          MYSQLHOST: 127.0.0.1
          MYSQLPORT: 3306
          MYSQLUSER: ${{ secrets.MYSQL_USER }}
          MYSQLPASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ADMIN_NAME: ${{ secrets.ADMIN_NAME }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
        run: npm test

